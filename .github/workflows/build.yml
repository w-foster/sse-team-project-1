name: Build
on: [push]

jobs:
  python-formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8

      - name: Run black (code formatting)
        run: |
          black . # Adjust the line length if necessary

      - name: Run flake8 (linting)
        run: |
          flake8 . # Ensure this matches black's line-length

  backend-tests:
    needs: python-formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:./src" >> $GITHUB_ENV

      - name: Set environment variables
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: echo "Environment variables set for testing"

      - name: Run tests
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: |
          pytest ./tests
          
  frontend-tests:
    needs: python-formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # Or the version of Node.js you are using

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Run Jest tests
        run: |
          cd frontend
          npm test -- --ci --runInBand  # Ensure tests run in CI mode

  deploy-to-impaas:
    needs: [python-formatting, backend-tests, frontend-tests]  # Ensure all jobs pass before deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: ImPaas-Deploy
        uses: /impaas/impaas-deploy@v3
        with:
          app-name: runescape-tracker
          deployment-token: ${{ secrets.IMPAAS_DEPLOY_TOKEN }}
          method: PLATFORM
